@startuml
actor Socio as socio

participant Controlador
participant Servicio
participant ConversorImagen
participant Dao
database BD

socio -> Controlador: Presenta documento / rostro
Controlador -> Servicio: registrarEntrada(documento / imagen)

alt Identificación por imagen
    Servicio -> ConversorImagen: convertirImagen(imagen)
    ConversorImagen --> Servicio: vectorFacial
end

Servicio -> Dao: buscarSocio(documento / vectorFacial)
Dao -> BD: SELECT * FROM Socio WHERE id/parametros
BD --> Dao: Socio socio | null
Dao --> Servicio: socio encontrado / no encontrado

alt Socio válido y activo
    Servicio -> Dao: insertarRegistroEntrada(Socio socio, Datetime entrada)
    Dao -> BD: INSERT INTO RegistroEntradaSalida (...)
    BD --> Dao: confirmación
    Dao --> Servicio: registro creado
    Servicio --> Controlador: confirmación registro
    Controlador --> socio: "Entrada registrada con éxito"
else Socio inválido o inactivo
    Servicio --> Controlador: error de validación
    Controlador --> socio: "Acceso denegado"
end

@enduml
